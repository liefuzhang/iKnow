@model iKnow.ViewModels.TopicFormViewModel

@{
    ViewBag.Title = "title";
}

<div class="topic-form-container">
    <h3 class="content-header">@(Model.Topic.Id == 0 ? "Add Topic" : "Edit Topic")</h3>
    <pre class="return-topic">@Html.ActionLink("Return to Topics  >  ", "Index", "Topic")</pre>

    @using (@Html.BeginForm("Save", "Topic", null, FormMethod.Post, new { enctype = "multipart/form-data" })) {
        <div class="form-group">
            @Html.LabelFor(m => m.Topic.Name)
            @Html.TextBoxFor(m => m.Topic.Name, new { @class = "form-control", placeholder = "Name" })
            @Html.ValidationMessageFor(m => m.Topic.Name, "", new { @class = "error" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Topic.Description)
            @Html.TextAreaFor(m => m.Topic.Description, 10, 50, new { @class = "form-control", placeholder = "Description" })
            @Html.ValidationMessageFor(m => m.Topic.Description, "", new { @class = "error" })
        </div>

        <div class="form-group">
            @Html.Label("Icon")
            <div class="img-container">
                <img src="@Model.Topic.IconPath"/>
            </div>
            @Html.TextBoxFor(m => m.PostedFile, new { type = "file", @class="js-topic-photo-upload"})
            @Html.ValidationMessageFor(m => m.PostedFile, "", new { @class = "error" })
            @*<input type="file" name="changeIcon" />*@
        </div>

        @Html.HiddenFor(m => m.Topic.Id)
        @Html.AntiForgeryToken()
        <button type="submit" formaction=@Url.Action("Save", "Topic") class="btn btn-func">Save</button>
        if (Model.Topic.Id != 0) {
            <button type="submit" formaction=@Url.Action("Delete", "Topic") class="btn btn-delete js-button-delete">Delete This Topic</button>
        }
    }
</div>

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
