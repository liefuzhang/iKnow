@using System.Web.UI.WebControls
@using iKnow.ViewModels
@model QuestionFormViewModel


<div class="modal-inner">
    @using (@Html.BeginForm("Save", "Question")) {
        @Html.ValidationSummary("", new { @class = "error" })

        <h2>@Model.FormTitle</h2>
        <p>Keep your question concise to quickly get a good answer</p>
        @Html.TextAreaFor(m => m.Question.Title, new { @class = "form-control add-question-title", placeholder = "Question title" })

        <div class="form-group">
            @Html.ListBoxFor(m => m.TopicIds, Model.Topics, new { @class = "topic-select", data_placeholder = "Add Topics" })
        </div>
        <div class="add-question-description">
            <p>Question Description (Optional):</p>
            @Html.TextAreaFor(m => m.Question.Description, new { @class = "form-control", placeholder = "Question background, conditions and other details" })
        </div>

        @Html.HiddenFor(m => m.Question.Id)
        @Html.AntiForgeryToken()
        <div class="form-group">
            @if (Model.CanUserDelete.HasValue && Model.CanUserDelete.Value) {
                <button type="submit" formaction=@Url.Action("Delete", "Question") class="btn btn-func btn-delete js-button-delete" data-delete-message="Are you sure you want to delete this question?">Delete</button>
            }
            <button type="submit" formaction=@Url.Action("Save", "Question") class="btn btn-func align-right">Submit Question</button>
        </div>
    }

</div>


@Scripts.Render("~/bundles/jqueryval")