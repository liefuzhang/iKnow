@using iKnow.Core.Models
@using Microsoft.AspNet.Identity
@using Constants = iKnow.Core.Models.Constants
@model iKnow.Core.ViewModels.UserProfileViewModel
@{
    ViewBag.Title = Model.AppUser.FullName + "'s Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    body {
        background-color: #f3f3f3;
    }
</style>

<div class="user-profile-container">
    <div class="user-profile-header head-panel panel">
        <div class="edit-profile-photo img-container">
            <img src="@Model.AppUser.IconPath" />
        </div>
        <div class="user-profile-form-content">
            <div class="form-group">
                <h2>@Model.AppUser.FullName</h2>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.AppUser.Intro)
                <span>
                    @if (!string.IsNullOrEmpty(Model.AppUser.Intro)) {
                    @(Model.AppUser.Intro)
                    }
                    else {
                    @Html.Raw("<i>Not set</i>")
                    }
                </span>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.AppUser.Location)
                <span>
                    @if (!string.IsNullOrEmpty(Model.AppUser.Location)) {
                    @(Model.AppUser.Location)
                    }
                    else {
                    @Html.Raw("<i>Not set</i>")
                    }
                </span>
            </div>
            <div class="form-group gender-setting">
                @Html.LabelFor(m => m.AppUser.Gender)
                @{
                    switch (Model.AppUser.Gender) {
                        case Constants.GenderMale:
                <span>Male</span>
                            break;
                        case Constants.GenderFemale:
                <span>Female</span>
                            break;
                        default:
                <span><i>Not Set</i></span>
                            break;
                    }
                }
            </div>
        </div>
        @Html.ActionLink("Edit Profile", "EditProfile", "Account", null, new { @class = "btn align-right" })
    </div>

    <div class="user-profile-detail-container">
        <div class="main-content-container">
            <div class="whole-panel panel load-more-list">
                @Html.Partial("_ActivityPartial", Model.Activities)
            </div>

            @Html.Partial("_LoadMorePartial")
        </div>

        <div class="sidebar question-sidebar">
            <div class="panel">
                Sidebar
            </div>
            @Html.Partial("_SideBarSiteInfoPartial")
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(document)
            .ready(function () {
                AnswerController.init();
                LoadMoreController.init("account", "?userName=" + "@(Model.AppUser.UserName)");
            });
    </script>
}
